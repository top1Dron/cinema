# Generated by Django 3.2.3 on 2021-05-26 22:41

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('phone_number', models.CharField(max_length=13, verbose_name='Номер телефона')),
                ('address', models.CharField(blank=True, max_length=50, null=True, verbose_name='Адрес')),
                ('cc_number', models.CharField(blank=True, max_length=16, null=True, verbose_name='Номер карты')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('language', models.CharField(blank=True, choices=[('ru', ''), ('ua', '')], max_length=2, null=True, verbose_name='Язык')),
                ('gender', models.CharField(blank=True, choices=[('M', ''), ('W', '')], max_length=1, null=True, verbose_name='Пол')),
                ('city', models.IntegerField(blank=True, choices=[(1, 'Одесса'), (2, 'Николаев'), (3, 'Херсон'), (4, 'Винница'), (5, 'Киев'), (6, 'Львов'), (7, 'Харьков'), (8, 'Тернополь'), (9, 'Кропивницкий'), (10, 'Ивано-Франковск'), (11, 'Днепр'), (12, 'Запорожье'), (13, 'Ужгород'), (14, 'Луцк'), (15, 'Мариуполь'), (16, 'Черкассы'), (17, 'Чернигов'), (18, 'Черновцы')], null=True, verbose_name='Город')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.DeleteModel(
            name='CustomUser',
        ),
    ]
